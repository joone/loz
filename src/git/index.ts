import { exec } from "child_process";

// Define a class for the git commands
// Path: src/git/index.ts
// generated by copilot
export class Git {
  // Define a method to get the diff
  // Path: src/git/index.ts
  // generated by copilot
  public async getDiffFromStaged(): Promise<string> {
    // Run a Git diff --staged command
    return await new Promise((resolve, reject) => {
      exec("git diff --staged", (error: any, stdout: any, stderr: any) => {
        if (error) {
          console.error(`Error: ${error.message}`);
          reject(error.message);
          return;
        }
        if (stderr) {
          //console.error(`Error: ${stderr}`);
          reject(`Error: ${stderr}`);
          return;
        }
        resolve(stdout);
      });
    });
  }

  public async commit(message: string): Promise<string> {
    return await new Promise((resolve, reject) => {
      exec(
        `git commit -m "${message}"`,
        (error: any, stdout: any, stderr: any) => {
          if (error) {
            console.error(`Error: ${error.message}`);
            reject(error.message);
            return;
          }
          if (stderr) {
            //console.error(`Error: ${stderr}`);
            reject(`Error: ${stderr}`);
            return;
          }
          resolve(stdout);
        }
      );
    });
  }
}
